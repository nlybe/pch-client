# This is a basic workflow to help you get started with Actions

name: PCH Client CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Generate version based on current date and run number
      - name: Version generator
        id: version-generator
        run: |
          # echo ${{ github.run_id }}
          # echo ${{ github.run_number }}
          d=$(date +%Y%m%d)
          echo "$d"
          echo "::set-output name=BUILD_NO::${d}_${{ github.run_number }}"

      - name: Print version
        run: echo "The current version is the ${{ steps.version-generator.outputs.BUILD_NO }}"

      # # Build and push the PCH Client UI
      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push the PCH Client UI
      #   with:
      #     image: nlyberakis/pchclient-ui
      #     tags: ${{ steps.version-generator.outputs.BUILD_NO }}, latest
      #     registry: docker.io
      #     dockerfile: ui/Dockerfile
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     directory: ui

      # # Build and push the PCH Client Parser
      # - uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push PCH Client Parser
      #   with:
      #     image: nlyberakis/pchclient-parser
      #     tags: ${{ steps.version-generator.outputs.BUILD_NO }}, latest
      #     registry: docker.io
      #     dockerfile: parser/Dockerfile
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     directory: parser

